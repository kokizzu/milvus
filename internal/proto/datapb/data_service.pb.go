// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data_service.proto

package datapb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	commonpb "github.com/milvus-io/milvus/internal/proto/commonpb"
	internalpb "github.com/milvus-io/milvus/internal/proto/internalpb"
	milvuspb "github.com/milvus-io/milvus/internal/proto/milvuspb"
	schemapb "github.com/milvus-io/milvus/internal/proto/schemapb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChannelWatchState int32

const (
	ChannelWatchState_Uncomplete ChannelWatchState = 0
	ChannelWatchState_Complete   ChannelWatchState = 1
)

var ChannelWatchState_name = map[int32]string{
	0: "Uncomplete",
	1: "Complete",
}

var ChannelWatchState_value = map[string]int32{
	"Uncomplete": 0,
	"Complete":   1,
}

func (x ChannelWatchState) String() string {
	return proto.EnumName(ChannelWatchState_name, int32(x))
}

func (ChannelWatchState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{0}
}

type RegisterNodeRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Address              *commonpb.Address `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RegisterNodeRequest) Reset()         { *m = RegisterNodeRequest{} }
func (m *RegisterNodeRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeRequest) ProtoMessage()    {}
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{0}
}

func (m *RegisterNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeRequest.Unmarshal(m, b)
}
func (m *RegisterNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeRequest.Marshal(b, m, deterministic)
}
func (m *RegisterNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeRequest.Merge(m, src)
}
func (m *RegisterNodeRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeRequest.Size(m)
}
func (m *RegisterNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeRequest proto.InternalMessageInfo

func (m *RegisterNodeRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *RegisterNodeRequest) GetAddress() *commonpb.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

type RegisterNodeResponse struct {
	InitParams           *internalpb.InitParams `protobuf:"bytes,1,opt,name=init_params,json=initParams,proto3" json:"init_params,omitempty"`
	Status               *commonpb.Status       `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RegisterNodeResponse) Reset()         { *m = RegisterNodeResponse{} }
func (m *RegisterNodeResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeResponse) ProtoMessage()    {}
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{1}
}

func (m *RegisterNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeResponse.Unmarshal(m, b)
}
func (m *RegisterNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeResponse.Marshal(b, m, deterministic)
}
func (m *RegisterNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeResponse.Merge(m, src)
}
func (m *RegisterNodeResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeResponse.Size(m)
}
func (m *RegisterNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeResponse proto.InternalMessageInfo

func (m *RegisterNodeResponse) GetInitParams() *internalpb.InitParams {
	if m != nil {
		return m.InitParams
	}
	return nil
}

func (m *RegisterNodeResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type FlushRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,4,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FlushRequest) Reset()         { *m = FlushRequest{} }
func (m *FlushRequest) String() string { return proto.CompactTextString(m) }
func (*FlushRequest) ProtoMessage()    {}
func (*FlushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{2}
}

func (m *FlushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushRequest.Unmarshal(m, b)
}
func (m *FlushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushRequest.Marshal(b, m, deterministic)
}
func (m *FlushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushRequest.Merge(m, src)
}
func (m *FlushRequest) XXX_Size() int {
	return xxx_messageInfo_FlushRequest.Size(m)
}
func (m *FlushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlushRequest proto.InternalMessageInfo

func (m *FlushRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *FlushRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *FlushRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

type SegmentIDRequest struct {
	Count                uint32   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	ChannelName          string   `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	CollectionID         int64    `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID          int64    `protobuf:"varint,4,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentIDRequest) Reset()         { *m = SegmentIDRequest{} }
func (m *SegmentIDRequest) String() string { return proto.CompactTextString(m) }
func (*SegmentIDRequest) ProtoMessage()    {}
func (*SegmentIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{3}
}

func (m *SegmentIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentIDRequest.Unmarshal(m, b)
}
func (m *SegmentIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentIDRequest.Marshal(b, m, deterministic)
}
func (m *SegmentIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentIDRequest.Merge(m, src)
}
func (m *SegmentIDRequest) XXX_Size() int {
	return xxx_messageInfo_SegmentIDRequest.Size(m)
}
func (m *SegmentIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentIDRequest proto.InternalMessageInfo

func (m *SegmentIDRequest) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SegmentIDRequest) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *SegmentIDRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SegmentIDRequest) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

type AssignSegmentIDRequest struct {
	NodeID               int64               `protobuf:"varint,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	PeerRole             string              `protobuf:"bytes,2,opt,name=peer_role,json=peerRole,proto3" json:"peer_role,omitempty"`
	SegmentIDRequests    []*SegmentIDRequest `protobuf:"bytes,3,rep,name=segmentIDRequests,proto3" json:"segmentIDRequests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AssignSegmentIDRequest) Reset()         { *m = AssignSegmentIDRequest{} }
func (m *AssignSegmentIDRequest) String() string { return proto.CompactTextString(m) }
func (*AssignSegmentIDRequest) ProtoMessage()    {}
func (*AssignSegmentIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{4}
}

func (m *AssignSegmentIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignSegmentIDRequest.Unmarshal(m, b)
}
func (m *AssignSegmentIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignSegmentIDRequest.Marshal(b, m, deterministic)
}
func (m *AssignSegmentIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignSegmentIDRequest.Merge(m, src)
}
func (m *AssignSegmentIDRequest) XXX_Size() int {
	return xxx_messageInfo_AssignSegmentIDRequest.Size(m)
}
func (m *AssignSegmentIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignSegmentIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignSegmentIDRequest proto.InternalMessageInfo

func (m *AssignSegmentIDRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *AssignSegmentIDRequest) GetPeerRole() string {
	if m != nil {
		return m.PeerRole
	}
	return ""
}

func (m *AssignSegmentIDRequest) GetSegmentIDRequests() []*SegmentIDRequest {
	if m != nil {
		return m.SegmentIDRequests
	}
	return nil
}

type SegmentIDAssignment struct {
	SegID                int64            `protobuf:"varint,1,opt,name=segID,proto3" json:"segID,omitempty"`
	ChannelName          string           `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	Count                uint32           `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	CollectionID         int64            `protobuf:"varint,4,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID          int64            `protobuf:"varint,5,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	ExpireTime           uint64           `protobuf:"varint,6,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	Status               *commonpb.Status `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SegmentIDAssignment) Reset()         { *m = SegmentIDAssignment{} }
func (m *SegmentIDAssignment) String() string { return proto.CompactTextString(m) }
func (*SegmentIDAssignment) ProtoMessage()    {}
func (*SegmentIDAssignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{5}
}

func (m *SegmentIDAssignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentIDAssignment.Unmarshal(m, b)
}
func (m *SegmentIDAssignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentIDAssignment.Marshal(b, m, deterministic)
}
func (m *SegmentIDAssignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentIDAssignment.Merge(m, src)
}
func (m *SegmentIDAssignment) XXX_Size() int {
	return xxx_messageInfo_SegmentIDAssignment.Size(m)
}
func (m *SegmentIDAssignment) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentIDAssignment.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentIDAssignment proto.InternalMessageInfo

func (m *SegmentIDAssignment) GetSegID() int64 {
	if m != nil {
		return m.SegID
	}
	return 0
}

func (m *SegmentIDAssignment) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *SegmentIDAssignment) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SegmentIDAssignment) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SegmentIDAssignment) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *SegmentIDAssignment) GetExpireTime() uint64 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *SegmentIDAssignment) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type AssignSegmentIDResponse struct {
	SegIDAssignments     []*SegmentIDAssignment `protobuf:"bytes,1,rep,name=segIDAssignments,proto3" json:"segIDAssignments,omitempty"`
	Status               *commonpb.Status       `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AssignSegmentIDResponse) Reset()         { *m = AssignSegmentIDResponse{} }
func (m *AssignSegmentIDResponse) String() string { return proto.CompactTextString(m) }
func (*AssignSegmentIDResponse) ProtoMessage()    {}
func (*AssignSegmentIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{6}
}

func (m *AssignSegmentIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignSegmentIDResponse.Unmarshal(m, b)
}
func (m *AssignSegmentIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignSegmentIDResponse.Marshal(b, m, deterministic)
}
func (m *AssignSegmentIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignSegmentIDResponse.Merge(m, src)
}
func (m *AssignSegmentIDResponse) XXX_Size() int {
	return xxx_messageInfo_AssignSegmentIDResponse.Size(m)
}
func (m *AssignSegmentIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignSegmentIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssignSegmentIDResponse proto.InternalMessageInfo

func (m *AssignSegmentIDResponse) GetSegIDAssignments() []*SegmentIDAssignment {
	if m != nil {
		return m.SegIDAssignments
	}
	return nil
}

func (m *AssignSegmentIDResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ShowSegmentsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CollectionID         int64             `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID          int64             `protobuf:"varint,3,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	DbID                 int64             `protobuf:"varint,4,opt,name=dbID,proto3" json:"dbID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ShowSegmentsRequest) Reset()         { *m = ShowSegmentsRequest{} }
func (m *ShowSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*ShowSegmentsRequest) ProtoMessage()    {}
func (*ShowSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{7}
}

func (m *ShowSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowSegmentsRequest.Unmarshal(m, b)
}
func (m *ShowSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *ShowSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowSegmentsRequest.Merge(m, src)
}
func (m *ShowSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_ShowSegmentsRequest.Size(m)
}
func (m *ShowSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShowSegmentsRequest proto.InternalMessageInfo

func (m *ShowSegmentsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ShowSegmentsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *ShowSegmentsRequest) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *ShowSegmentsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

type ShowSegmentsResponse struct {
	SegmentIDs           []int64          `protobuf:"varint,1,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	Status               *commonpb.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ShowSegmentsResponse) Reset()         { *m = ShowSegmentsResponse{} }
func (m *ShowSegmentsResponse) String() string { return proto.CompactTextString(m) }
func (*ShowSegmentsResponse) ProtoMessage()    {}
func (*ShowSegmentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{8}
}

func (m *ShowSegmentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowSegmentsResponse.Unmarshal(m, b)
}
func (m *ShowSegmentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowSegmentsResponse.Marshal(b, m, deterministic)
}
func (m *ShowSegmentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowSegmentsResponse.Merge(m, src)
}
func (m *ShowSegmentsResponse) XXX_Size() int {
	return xxx_messageInfo_ShowSegmentsResponse.Size(m)
}
func (m *ShowSegmentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowSegmentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShowSegmentsResponse proto.InternalMessageInfo

func (m *ShowSegmentsResponse) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *ShowSegmentsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetSegmentStatesRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentIDs           []int64           `protobuf:"varint,2,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetSegmentStatesRequest) Reset()         { *m = GetSegmentStatesRequest{} }
func (m *GetSegmentStatesRequest) String() string { return proto.CompactTextString(m) }
func (*GetSegmentStatesRequest) ProtoMessage()    {}
func (*GetSegmentStatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{9}
}

func (m *GetSegmentStatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentStatesRequest.Unmarshal(m, b)
}
func (m *GetSegmentStatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentStatesRequest.Marshal(b, m, deterministic)
}
func (m *GetSegmentStatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentStatesRequest.Merge(m, src)
}
func (m *GetSegmentStatesRequest) XXX_Size() int {
	return xxx_messageInfo_GetSegmentStatesRequest.Size(m)
}
func (m *GetSegmentStatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentStatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentStatesRequest proto.InternalMessageInfo

func (m *GetSegmentStatesRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetSegmentStatesRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

type SegmentStateInfo struct {
	SegmentID            int64                   `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	State                commonpb.SegmentState   `protobuf:"varint,2,opt,name=state,proto3,enum=milvus.proto.common.SegmentState" json:"state,omitempty"`
	StartPosition        *internalpb.MsgPosition `protobuf:"bytes,3,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"`
	EndPosition          *internalpb.MsgPosition `protobuf:"bytes,4,opt,name=end_position,json=endPosition,proto3" json:"end_position,omitempty"`
	Status               *commonpb.Status        `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SegmentStateInfo) Reset()         { *m = SegmentStateInfo{} }
func (m *SegmentStateInfo) String() string { return proto.CompactTextString(m) }
func (*SegmentStateInfo) ProtoMessage()    {}
func (*SegmentStateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{10}
}

func (m *SegmentStateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentStateInfo.Unmarshal(m, b)
}
func (m *SegmentStateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentStateInfo.Marshal(b, m, deterministic)
}
func (m *SegmentStateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentStateInfo.Merge(m, src)
}
func (m *SegmentStateInfo) XXX_Size() int {
	return xxx_messageInfo_SegmentStateInfo.Size(m)
}
func (m *SegmentStateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentStateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentStateInfo proto.InternalMessageInfo

func (m *SegmentStateInfo) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SegmentStateInfo) GetState() commonpb.SegmentState {
	if m != nil {
		return m.State
	}
	return commonpb.SegmentState_SegmentStateNone
}

func (m *SegmentStateInfo) GetStartPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.StartPosition
	}
	return nil
}

func (m *SegmentStateInfo) GetEndPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.EndPosition
	}
	return nil
}

func (m *SegmentStateInfo) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetSegmentStatesResponse struct {
	Status               *commonpb.Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	States               []*SegmentStateInfo `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetSegmentStatesResponse) Reset()         { *m = GetSegmentStatesResponse{} }
func (m *GetSegmentStatesResponse) String() string { return proto.CompactTextString(m) }
func (*GetSegmentStatesResponse) ProtoMessage()    {}
func (*GetSegmentStatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{11}
}

func (m *GetSegmentStatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentStatesResponse.Unmarshal(m, b)
}
func (m *GetSegmentStatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentStatesResponse.Marshal(b, m, deterministic)
}
func (m *GetSegmentStatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentStatesResponse.Merge(m, src)
}
func (m *GetSegmentStatesResponse) XXX_Size() int {
	return xxx_messageInfo_GetSegmentStatesResponse.Size(m)
}
func (m *GetSegmentStatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentStatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentStatesResponse proto.InternalMessageInfo

func (m *GetSegmentStatesResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetSegmentStatesResponse) GetStates() []*SegmentStateInfo {
	if m != nil {
		return m.States
	}
	return nil
}

type GetSegmentInfoRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentIDs           []int64           `protobuf:"varint,2,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetSegmentInfoRequest) Reset()         { *m = GetSegmentInfoRequest{} }
func (m *GetSegmentInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetSegmentInfoRequest) ProtoMessage()    {}
func (*GetSegmentInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{12}
}

func (m *GetSegmentInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentInfoRequest.Unmarshal(m, b)
}
func (m *GetSegmentInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetSegmentInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentInfoRequest.Merge(m, src)
}
func (m *GetSegmentInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetSegmentInfoRequest.Size(m)
}
func (m *GetSegmentInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentInfoRequest proto.InternalMessageInfo

func (m *GetSegmentInfoRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetSegmentInfoRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

type GetSegmentInfoResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Infos                []*SegmentInfo   `protobuf:"bytes,2,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetSegmentInfoResponse) Reset()         { *m = GetSegmentInfoResponse{} }
func (m *GetSegmentInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetSegmentInfoResponse) ProtoMessage()    {}
func (*GetSegmentInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{13}
}

func (m *GetSegmentInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentInfoResponse.Unmarshal(m, b)
}
func (m *GetSegmentInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetSegmentInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentInfoResponse.Merge(m, src)
}
func (m *GetSegmentInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetSegmentInfoResponse.Size(m)
}
func (m *GetSegmentInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentInfoResponse proto.InternalMessageInfo

func (m *GetSegmentInfoResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetSegmentInfoResponse) GetInfos() []*SegmentInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

type GetInsertBinlogPathsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentID            int64             `protobuf:"varint,2,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetInsertBinlogPathsRequest) Reset()         { *m = GetInsertBinlogPathsRequest{} }
func (m *GetInsertBinlogPathsRequest) String() string { return proto.CompactTextString(m) }
func (*GetInsertBinlogPathsRequest) ProtoMessage()    {}
func (*GetInsertBinlogPathsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{14}
}

func (m *GetInsertBinlogPathsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInsertBinlogPathsRequest.Unmarshal(m, b)
}
func (m *GetInsertBinlogPathsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInsertBinlogPathsRequest.Marshal(b, m, deterministic)
}
func (m *GetInsertBinlogPathsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInsertBinlogPathsRequest.Merge(m, src)
}
func (m *GetInsertBinlogPathsRequest) XXX_Size() int {
	return xxx_messageInfo_GetInsertBinlogPathsRequest.Size(m)
}
func (m *GetInsertBinlogPathsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInsertBinlogPathsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInsertBinlogPathsRequest proto.InternalMessageInfo

func (m *GetInsertBinlogPathsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetInsertBinlogPathsRequest) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

type GetInsertBinlogPathsResponse struct {
	FieldIDs             []int64                  `protobuf:"varint,1,rep,packed,name=fieldIDs,proto3" json:"fieldIDs,omitempty"`
	Paths                []*internalpb.StringList `protobuf:"bytes,2,rep,name=paths,proto3" json:"paths,omitempty"`
	Status               *commonpb.Status         `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetInsertBinlogPathsResponse) Reset()         { *m = GetInsertBinlogPathsResponse{} }
func (m *GetInsertBinlogPathsResponse) String() string { return proto.CompactTextString(m) }
func (*GetInsertBinlogPathsResponse) ProtoMessage()    {}
func (*GetInsertBinlogPathsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{15}
}

func (m *GetInsertBinlogPathsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInsertBinlogPathsResponse.Unmarshal(m, b)
}
func (m *GetInsertBinlogPathsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInsertBinlogPathsResponse.Marshal(b, m, deterministic)
}
func (m *GetInsertBinlogPathsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInsertBinlogPathsResponse.Merge(m, src)
}
func (m *GetInsertBinlogPathsResponse) XXX_Size() int {
	return xxx_messageInfo_GetInsertBinlogPathsResponse.Size(m)
}
func (m *GetInsertBinlogPathsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInsertBinlogPathsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInsertBinlogPathsResponse proto.InternalMessageInfo

func (m *GetInsertBinlogPathsResponse) GetFieldIDs() []int64 {
	if m != nil {
		return m.FieldIDs
	}
	return nil
}

func (m *GetInsertBinlogPathsResponse) GetPaths() []*internalpb.StringList {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *GetInsertBinlogPathsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetInsertChannelsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetInsertChannelsRequest) Reset()         { *m = GetInsertChannelsRequest{} }
func (m *GetInsertChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*GetInsertChannelsRequest) ProtoMessage()    {}
func (*GetInsertChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{16}
}

func (m *GetInsertChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInsertChannelsRequest.Unmarshal(m, b)
}
func (m *GetInsertChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInsertChannelsRequest.Marshal(b, m, deterministic)
}
func (m *GetInsertChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInsertChannelsRequest.Merge(m, src)
}
func (m *GetInsertChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_GetInsertChannelsRequest.Size(m)
}
func (m *GetInsertChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInsertChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInsertChannelsRequest proto.InternalMessageInfo

func (m *GetInsertChannelsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetInsertChannelsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *GetInsertChannelsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

type GetCollectionStatisticsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetCollectionStatisticsRequest) Reset()         { *m = GetCollectionStatisticsRequest{} }
func (m *GetCollectionStatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*GetCollectionStatisticsRequest) ProtoMessage()    {}
func (*GetCollectionStatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{17}
}

func (m *GetCollectionStatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCollectionStatisticsRequest.Unmarshal(m, b)
}
func (m *GetCollectionStatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCollectionStatisticsRequest.Marshal(b, m, deterministic)
}
func (m *GetCollectionStatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollectionStatisticsRequest.Merge(m, src)
}
func (m *GetCollectionStatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_GetCollectionStatisticsRequest.Size(m)
}
func (m *GetCollectionStatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollectionStatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollectionStatisticsRequest proto.InternalMessageInfo

func (m *GetCollectionStatisticsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetCollectionStatisticsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *GetCollectionStatisticsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

type GetCollectionStatisticsResponse struct {
	Stats                []*commonpb.KeyValuePair `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	Status               *commonpb.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetCollectionStatisticsResponse) Reset()         { *m = GetCollectionStatisticsResponse{} }
func (m *GetCollectionStatisticsResponse) String() string { return proto.CompactTextString(m) }
func (*GetCollectionStatisticsResponse) ProtoMessage()    {}
func (*GetCollectionStatisticsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{18}
}

func (m *GetCollectionStatisticsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCollectionStatisticsResponse.Unmarshal(m, b)
}
func (m *GetCollectionStatisticsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCollectionStatisticsResponse.Marshal(b, m, deterministic)
}
func (m *GetCollectionStatisticsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollectionStatisticsResponse.Merge(m, src)
}
func (m *GetCollectionStatisticsResponse) XXX_Size() int {
	return xxx_messageInfo_GetCollectionStatisticsResponse.Size(m)
}
func (m *GetCollectionStatisticsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollectionStatisticsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollectionStatisticsResponse proto.InternalMessageInfo

func (m *GetCollectionStatisticsResponse) GetStats() []*commonpb.KeyValuePair {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *GetCollectionStatisticsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetPartitionStatisticsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID          int64             `protobuf:"varint,4,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetPartitionStatisticsRequest) Reset()         { *m = GetPartitionStatisticsRequest{} }
func (m *GetPartitionStatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPartitionStatisticsRequest) ProtoMessage()    {}
func (*GetPartitionStatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{19}
}

func (m *GetPartitionStatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPartitionStatisticsRequest.Unmarshal(m, b)
}
func (m *GetPartitionStatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPartitionStatisticsRequest.Marshal(b, m, deterministic)
}
func (m *GetPartitionStatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPartitionStatisticsRequest.Merge(m, src)
}
func (m *GetPartitionStatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPartitionStatisticsRequest.Size(m)
}
func (m *GetPartitionStatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPartitionStatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPartitionStatisticsRequest proto.InternalMessageInfo

func (m *GetPartitionStatisticsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetPartitionStatisticsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *GetPartitionStatisticsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *GetPartitionStatisticsRequest) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

type GetPartitionStatisticsResponse struct {
	Stats                []*commonpb.KeyValuePair `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	Status               *commonpb.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetPartitionStatisticsResponse) Reset()         { *m = GetPartitionStatisticsResponse{} }
func (m *GetPartitionStatisticsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPartitionStatisticsResponse) ProtoMessage()    {}
func (*GetPartitionStatisticsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{20}
}

func (m *GetPartitionStatisticsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPartitionStatisticsResponse.Unmarshal(m, b)
}
func (m *GetPartitionStatisticsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPartitionStatisticsResponse.Marshal(b, m, deterministic)
}
func (m *GetPartitionStatisticsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPartitionStatisticsResponse.Merge(m, src)
}
func (m *GetPartitionStatisticsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPartitionStatisticsResponse.Size(m)
}
func (m *GetPartitionStatisticsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPartitionStatisticsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPartitionStatisticsResponse proto.InternalMessageInfo

func (m *GetPartitionStatisticsResponse) GetStats() []*commonpb.KeyValuePair {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *GetPartitionStatisticsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetSegmentInfoChannelRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSegmentInfoChannelRequest) Reset()         { *m = GetSegmentInfoChannelRequest{} }
func (m *GetSegmentInfoChannelRequest) String() string { return proto.CompactTextString(m) }
func (*GetSegmentInfoChannelRequest) ProtoMessage()    {}
func (*GetSegmentInfoChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{21}
}

func (m *GetSegmentInfoChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentInfoChannelRequest.Unmarshal(m, b)
}
func (m *GetSegmentInfoChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentInfoChannelRequest.Marshal(b, m, deterministic)
}
func (m *GetSegmentInfoChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentInfoChannelRequest.Merge(m, src)
}
func (m *GetSegmentInfoChannelRequest) XXX_Size() int {
	return xxx_messageInfo_GetSegmentInfoChannelRequest.Size(m)
}
func (m *GetSegmentInfoChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentInfoChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentInfoChannelRequest proto.InternalMessageInfo

type VchannelInfo struct {
	CollectionID         int64                   `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	ChannelName          string                  `protobuf:"bytes,2,opt,name=channelName,proto3" json:"channelName,omitempty"`
	SeekPosition         *internalpb.MsgPosition `protobuf:"bytes,3,opt,name=seek_position,json=seekPosition,proto3" json:"seek_position,omitempty"`
	UnflushedSegments    []*SegmentInfo          `protobuf:"bytes,4,rep,name=unflushedSegments,proto3" json:"unflushedSegments,omitempty"`
	FlushedSegments      []int64                 `protobuf:"varint,5,rep,packed,name=flushedSegments,proto3" json:"flushedSegments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *VchannelInfo) Reset()         { *m = VchannelInfo{} }
func (m *VchannelInfo) String() string { return proto.CompactTextString(m) }
func (*VchannelInfo) ProtoMessage()    {}
func (*VchannelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{22}
}

func (m *VchannelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VchannelInfo.Unmarshal(m, b)
}
func (m *VchannelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VchannelInfo.Marshal(b, m, deterministic)
}
func (m *VchannelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VchannelInfo.Merge(m, src)
}
func (m *VchannelInfo) XXX_Size() int {
	return xxx_messageInfo_VchannelInfo.Size(m)
}
func (m *VchannelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VchannelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VchannelInfo proto.InternalMessageInfo

func (m *VchannelInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *VchannelInfo) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *VchannelInfo) GetSeekPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.SeekPosition
	}
	return nil
}

func (m *VchannelInfo) GetUnflushedSegments() []*SegmentInfo {
	if m != nil {
		return m.UnflushedSegments
	}
	return nil
}

func (m *VchannelInfo) GetFlushedSegments() []int64 {
	if m != nil {
		return m.FlushedSegments
	}
	return nil
}

type WatchDmChannelsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Vchannels            []*VchannelInfo   `protobuf:"bytes,2,rep,name=vchannels,proto3" json:"vchannels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WatchDmChannelsRequest) Reset()         { *m = WatchDmChannelsRequest{} }
func (m *WatchDmChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*WatchDmChannelsRequest) ProtoMessage()    {}
func (*WatchDmChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{23}
}

func (m *WatchDmChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchDmChannelsRequest.Unmarshal(m, b)
}
func (m *WatchDmChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchDmChannelsRequest.Marshal(b, m, deterministic)
}
func (m *WatchDmChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchDmChannelsRequest.Merge(m, src)
}
func (m *WatchDmChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_WatchDmChannelsRequest.Size(m)
}
func (m *WatchDmChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchDmChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchDmChannelsRequest proto.InternalMessageInfo

func (m *WatchDmChannelsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetVchannels() []*VchannelInfo {
	if m != nil {
		return m.Vchannels
	}
	return nil
}

type FlushSegmentsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	SegmentIDs           []int64           `protobuf:"varint,4,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FlushSegmentsRequest) Reset()         { *m = FlushSegmentsRequest{} }
func (m *FlushSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*FlushSegmentsRequest) ProtoMessage()    {}
func (*FlushSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{24}
}

func (m *FlushSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushSegmentsRequest.Unmarshal(m, b)
}
func (m *FlushSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *FlushSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushSegmentsRequest.Merge(m, src)
}
func (m *FlushSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_FlushSegmentsRequest.Size(m)
}
func (m *FlushSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlushSegmentsRequest proto.InternalMessageInfo

func (m *FlushSegmentsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *FlushSegmentsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *FlushSegmentsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *FlushSegmentsRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

type SegmentMsg struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Segment              *SegmentInfo      `protobuf:"bytes,2,opt,name=segment,proto3" json:"segment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SegmentMsg) Reset()         { *m = SegmentMsg{} }
func (m *SegmentMsg) String() string { return proto.CompactTextString(m) }
func (*SegmentMsg) ProtoMessage()    {}
func (*SegmentMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{25}
}

func (m *SegmentMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentMsg.Unmarshal(m, b)
}
func (m *SegmentMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentMsg.Marshal(b, m, deterministic)
}
func (m *SegmentMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentMsg.Merge(m, src)
}
func (m *SegmentMsg) XXX_Size() int {
	return xxx_messageInfo_SegmentMsg.Size(m)
}
func (m *SegmentMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentMsg proto.InternalMessageInfo

func (m *SegmentMsg) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SegmentMsg) GetSegment() *SegmentInfo {
	if m != nil {
		return m.Segment
	}
	return nil
}

// key: ${prefix}/${segmentID}/${fieldID}/${idx}
type SegmentFieldBinlogMeta struct {
	FieldID              int64    `protobuf:"varint,1,opt,name=fieldID,proto3" json:"fieldID,omitempty"`
	BinlogPath           string   `protobuf:"bytes,2,opt,name=binlog_path,json=binlogPath,proto3" json:"binlog_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentFieldBinlogMeta) Reset()         { *m = SegmentFieldBinlogMeta{} }
func (m *SegmentFieldBinlogMeta) String() string { return proto.CompactTextString(m) }
func (*SegmentFieldBinlogMeta) ProtoMessage()    {}
func (*SegmentFieldBinlogMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{26}
}

func (m *SegmentFieldBinlogMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentFieldBinlogMeta.Unmarshal(m, b)
}
func (m *SegmentFieldBinlogMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentFieldBinlogMeta.Marshal(b, m, deterministic)
}
func (m *SegmentFieldBinlogMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentFieldBinlogMeta.Merge(m, src)
}
func (m *SegmentFieldBinlogMeta) XXX_Size() int {
	return xxx_messageInfo_SegmentFieldBinlogMeta.Size(m)
}
func (m *SegmentFieldBinlogMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentFieldBinlogMeta.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentFieldBinlogMeta proto.InternalMessageInfo

func (m *SegmentFieldBinlogMeta) GetFieldID() int64 {
	if m != nil {
		return m.FieldID
	}
	return 0
}

func (m *SegmentFieldBinlogMeta) GetBinlogPath() string {
	if m != nil {
		return m.BinlogPath
	}
	return ""
}

// key: ${prefix}/${collectionID}/${idx}
type DDLBinlogMeta struct {
	DdlBinlogPath        string   `protobuf:"bytes,1,opt,name=ddl_binlog_path,json=ddlBinlogPath,proto3" json:"ddl_binlog_path,omitempty"`
	TsBinlogPath         string   `protobuf:"bytes,2,opt,name=ts_binlog_path,json=tsBinlogPath,proto3" json:"ts_binlog_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DDLBinlogMeta) Reset()         { *m = DDLBinlogMeta{} }
func (m *DDLBinlogMeta) String() string { return proto.CompactTextString(m) }
func (*DDLBinlogMeta) ProtoMessage()    {}
func (*DDLBinlogMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{27}
}

func (m *DDLBinlogMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DDLBinlogMeta.Unmarshal(m, b)
}
func (m *DDLBinlogMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DDLBinlogMeta.Marshal(b, m, deterministic)
}
func (m *DDLBinlogMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DDLBinlogMeta.Merge(m, src)
}
func (m *DDLBinlogMeta) XXX_Size() int {
	return xxx_messageInfo_DDLBinlogMeta.Size(m)
}
func (m *DDLBinlogMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_DDLBinlogMeta.DiscardUnknown(m)
}

var xxx_messageInfo_DDLBinlogMeta proto.InternalMessageInfo

func (m *DDLBinlogMeta) GetDdlBinlogPath() string {
	if m != nil {
		return m.DdlBinlogPath
	}
	return ""
}

func (m *DDLBinlogMeta) GetTsBinlogPath() string {
	if m != nil {
		return m.TsBinlogPath
	}
	return ""
}

type FieldFlushMeta struct {
	FieldID              int64    `protobuf:"varint,1,opt,name=fieldID,proto3" json:"fieldID,omitempty"`
	BinlogPaths          []string `protobuf:"bytes,2,rep,name=binlog_paths,json=binlogPaths,proto3" json:"binlog_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldFlushMeta) Reset()         { *m = FieldFlushMeta{} }
func (m *FieldFlushMeta) String() string { return proto.CompactTextString(m) }
func (*FieldFlushMeta) ProtoMessage()    {}
func (*FieldFlushMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{28}
}

func (m *FieldFlushMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldFlushMeta.Unmarshal(m, b)
}
func (m *FieldFlushMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldFlushMeta.Marshal(b, m, deterministic)
}
func (m *FieldFlushMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldFlushMeta.Merge(m, src)
}
func (m *FieldFlushMeta) XXX_Size() int {
	return xxx_messageInfo_FieldFlushMeta.Size(m)
}
func (m *FieldFlushMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldFlushMeta.DiscardUnknown(m)
}

var xxx_messageInfo_FieldFlushMeta proto.InternalMessageInfo

func (m *FieldFlushMeta) GetFieldID() int64 {
	if m != nil {
		return m.FieldID
	}
	return 0
}

func (m *FieldFlushMeta) GetBinlogPaths() []string {
	if m != nil {
		return m.BinlogPaths
	}
	return nil
}

type SegmentFlushMeta struct {
	SegmentID            int64             `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	IsFlushed            bool              `protobuf:"varint,2,opt,name=is_flushed,json=isFlushed,proto3" json:"is_flushed,omitempty"`
	Fields               []*FieldFlushMeta `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SegmentFlushMeta) Reset()         { *m = SegmentFlushMeta{} }
func (m *SegmentFlushMeta) String() string { return proto.CompactTextString(m) }
func (*SegmentFlushMeta) ProtoMessage()    {}
func (*SegmentFlushMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{29}
}

func (m *SegmentFlushMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentFlushMeta.Unmarshal(m, b)
}
func (m *SegmentFlushMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentFlushMeta.Marshal(b, m, deterministic)
}
func (m *SegmentFlushMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentFlushMeta.Merge(m, src)
}
func (m *SegmentFlushMeta) XXX_Size() int {
	return xxx_messageInfo_SegmentFlushMeta.Size(m)
}
func (m *SegmentFlushMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentFlushMeta.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentFlushMeta proto.InternalMessageInfo

func (m *SegmentFlushMeta) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SegmentFlushMeta) GetIsFlushed() bool {
	if m != nil {
		return m.IsFlushed
	}
	return false
}

func (m *SegmentFlushMeta) GetFields() []*FieldFlushMeta {
	if m != nil {
		return m.Fields
	}
	return nil
}

type DDLFlushMeta struct {
	CollectionID         int64    `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	BinlogPaths          []string `protobuf:"bytes,2,rep,name=binlog_paths,json=binlogPaths,proto3" json:"binlog_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DDLFlushMeta) Reset()         { *m = DDLFlushMeta{} }
func (m *DDLFlushMeta) String() string { return proto.CompactTextString(m) }
func (*DDLFlushMeta) ProtoMessage()    {}
func (*DDLFlushMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{30}
}

func (m *DDLFlushMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DDLFlushMeta.Unmarshal(m, b)
}
func (m *DDLFlushMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DDLFlushMeta.Marshal(b, m, deterministic)
}
func (m *DDLFlushMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DDLFlushMeta.Merge(m, src)
}
func (m *DDLFlushMeta) XXX_Size() int {
	return xxx_messageInfo_DDLFlushMeta.Size(m)
}
func (m *DDLFlushMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_DDLFlushMeta.DiscardUnknown(m)
}

var xxx_messageInfo_DDLFlushMeta proto.InternalMessageInfo

func (m *DDLFlushMeta) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *DDLFlushMeta) GetBinlogPaths() []string {
	if m != nil {
		return m.BinlogPaths
	}
	return nil
}

type CollectionInfo struct {
	ID                   int64                      `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Schema               *schemapb.CollectionSchema `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	Partitions           []int64                    `protobuf:"varint,3,rep,packed,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CollectionInfo) Reset()         { *m = CollectionInfo{} }
func (m *CollectionInfo) String() string { return proto.CompactTextString(m) }
func (*CollectionInfo) ProtoMessage()    {}
func (*CollectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{31}
}

func (m *CollectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionInfo.Unmarshal(m, b)
}
func (m *CollectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionInfo.Marshal(b, m, deterministic)
}
func (m *CollectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionInfo.Merge(m, src)
}
func (m *CollectionInfo) XXX_Size() int {
	return xxx_messageInfo_CollectionInfo.Size(m)
}
func (m *CollectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionInfo proto.InternalMessageInfo

func (m *CollectionInfo) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *CollectionInfo) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *CollectionInfo) GetPartitions() []int64 {
	if m != nil {
		return m.Partitions
	}
	return nil
}

type SegmentInfo struct {
	ID                   int64                   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CollectionID         int64                   `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID          int64                   `protobuf:"varint,3,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	InsertChannel        string                  `protobuf:"bytes,4,opt,name=insert_channel,json=insertChannel,proto3" json:"insert_channel,omitempty"`
	NumOfRows            int64                   `protobuf:"varint,5,opt,name=num_of_rows,json=numOfRows,proto3" json:"num_of_rows,omitempty"`
	State                commonpb.SegmentState   `protobuf:"varint,6,opt,name=state,proto3,enum=milvus.proto.common.SegmentState" json:"state,omitempty"`
	DmlPosition          *internalpb.MsgPosition `protobuf:"bytes,7,opt,name=dml_position,json=dmlPosition,proto3" json:"dml_position,omitempty"`
	MaxRowNum            int64                   `protobuf:"varint,8,opt,name=max_row_num,json=maxRowNum,proto3" json:"max_row_num,omitempty"`
	LastExpireTime       uint64                  `protobuf:"varint,9,opt,name=last_expire_time,json=lastExpireTime,proto3" json:"last_expire_time,omitempty"`
	StartPosition        *internalpb.MsgPosition `protobuf:"bytes,10,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SegmentInfo) Reset()         { *m = SegmentInfo{} }
func (m *SegmentInfo) String() string { return proto.CompactTextString(m) }
func (*SegmentInfo) ProtoMessage()    {}
func (*SegmentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{32}
}

func (m *SegmentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentInfo.Unmarshal(m, b)
}
func (m *SegmentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentInfo.Marshal(b, m, deterministic)
}
func (m *SegmentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentInfo.Merge(m, src)
}
func (m *SegmentInfo) XXX_Size() int {
	return xxx_messageInfo_SegmentInfo.Size(m)
}
func (m *SegmentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentInfo proto.InternalMessageInfo

func (m *SegmentInfo) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SegmentInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SegmentInfo) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *SegmentInfo) GetInsertChannel() string {
	if m != nil {
		return m.InsertChannel
	}
	return ""
}

func (m *SegmentInfo) GetNumOfRows() int64 {
	if m != nil {
		return m.NumOfRows
	}
	return 0
}

func (m *SegmentInfo) GetState() commonpb.SegmentState {
	if m != nil {
		return m.State
	}
	return commonpb.SegmentState_SegmentStateNone
}

func (m *SegmentInfo) GetDmlPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.DmlPosition
	}
	return nil
}

func (m *SegmentInfo) GetMaxRowNum() int64 {
	if m != nil {
		return m.MaxRowNum
	}
	return 0
}

func (m *SegmentInfo) GetLastExpireTime() uint64 {
	if m != nil {
		return m.LastExpireTime
	}
	return 0
}

func (m *SegmentInfo) GetStartPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.StartPosition
	}
	return nil
}

type ID2PathList struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Paths                []string `protobuf:"bytes,2,rep,name=Paths,proto3" json:"Paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID2PathList) Reset()         { *m = ID2PathList{} }
func (m *ID2PathList) String() string { return proto.CompactTextString(m) }
func (*ID2PathList) ProtoMessage()    {}
func (*ID2PathList) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{33}
}

func (m *ID2PathList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID2PathList.Unmarshal(m, b)
}
func (m *ID2PathList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID2PathList.Marshal(b, m, deterministic)
}
func (m *ID2PathList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID2PathList.Merge(m, src)
}
func (m *ID2PathList) XXX_Size() int {
	return xxx_messageInfo_ID2PathList.Size(m)
}
func (m *ID2PathList) XXX_DiscardUnknown() {
	xxx_messageInfo_ID2PathList.DiscardUnknown(m)
}

var xxx_messageInfo_ID2PathList proto.InternalMessageInfo

func (m *ID2PathList) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *ID2PathList) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

type SegmentStartPosition struct {
	StartPosition        *internalpb.MsgPosition `protobuf:"bytes,1,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"`
	SegmentID            int64                   `protobuf:"varint,2,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SegmentStartPosition) Reset()         { *m = SegmentStartPosition{} }
func (m *SegmentStartPosition) String() string { return proto.CompactTextString(m) }
func (*SegmentStartPosition) ProtoMessage()    {}
func (*SegmentStartPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{34}
}

func (m *SegmentStartPosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentStartPosition.Unmarshal(m, b)
}
func (m *SegmentStartPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentStartPosition.Marshal(b, m, deterministic)
}
func (m *SegmentStartPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentStartPosition.Merge(m, src)
}
func (m *SegmentStartPosition) XXX_Size() int {
	return xxx_messageInfo_SegmentStartPosition.Size(m)
}
func (m *SegmentStartPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentStartPosition.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentStartPosition proto.InternalMessageInfo

func (m *SegmentStartPosition) GetStartPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.StartPosition
	}
	return nil
}

func (m *SegmentStartPosition) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

type SaveBinlogPathsRequest struct {
	Base                 *commonpb.MsgBase       `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentID            int64                   `protobuf:"varint,2,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	CollectionID         int64                   `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	Field2BinlogPaths    []*ID2PathList          `protobuf:"bytes,4,rep,name=field2BinlogPaths,proto3" json:"field2BinlogPaths,omitempty"`
	CheckPoints          []*CheckPoint           `protobuf:"bytes,5,rep,name=checkPoints,proto3" json:"checkPoints,omitempty"`
	StartPositions       []*SegmentStartPosition `protobuf:"bytes,6,rep,name=start_positions,json=startPositions,proto3" json:"start_positions,omitempty"`
	Flushed              bool                    `protobuf:"varint,7,opt,name=flushed,proto3" json:"flushed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SaveBinlogPathsRequest) Reset()         { *m = SaveBinlogPathsRequest{} }
func (m *SaveBinlogPathsRequest) String() string { return proto.CompactTextString(m) }
func (*SaveBinlogPathsRequest) ProtoMessage()    {}
func (*SaveBinlogPathsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{35}
}

func (m *SaveBinlogPathsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveBinlogPathsRequest.Unmarshal(m, b)
}
func (m *SaveBinlogPathsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveBinlogPathsRequest.Marshal(b, m, deterministic)
}
func (m *SaveBinlogPathsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveBinlogPathsRequest.Merge(m, src)
}
func (m *SaveBinlogPathsRequest) XXX_Size() int {
	return xxx_messageInfo_SaveBinlogPathsRequest.Size(m)
}
func (m *SaveBinlogPathsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveBinlogPathsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveBinlogPathsRequest proto.InternalMessageInfo

func (m *SaveBinlogPathsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SaveBinlogPathsRequest) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SaveBinlogPathsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SaveBinlogPathsRequest) GetField2BinlogPaths() []*ID2PathList {
	if m != nil {
		return m.Field2BinlogPaths
	}
	return nil
}

func (m *SaveBinlogPathsRequest) GetCheckPoints() []*CheckPoint {
	if m != nil {
		return m.CheckPoints
	}
	return nil
}

func (m *SaveBinlogPathsRequest) GetStartPositions() []*SegmentStartPosition {
	if m != nil {
		return m.StartPositions
	}
	return nil
}

func (m *SaveBinlogPathsRequest) GetFlushed() bool {
	if m != nil {
		return m.Flushed
	}
	return false
}

type CheckPoint struct {
	SegmentID            int64                   `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	Position             *internalpb.MsgPosition `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	NumOfRows            int64                   `protobuf:"varint,3,opt,name=num_of_rows,json=numOfRows,proto3" json:"num_of_rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CheckPoint) Reset()         { *m = CheckPoint{} }
func (m *CheckPoint) String() string { return proto.CompactTextString(m) }
func (*CheckPoint) ProtoMessage()    {}
func (*CheckPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{36}
}

func (m *CheckPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckPoint.Unmarshal(m, b)
}
func (m *CheckPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckPoint.Marshal(b, m, deterministic)
}
func (m *CheckPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckPoint.Merge(m, src)
}
func (m *CheckPoint) XXX_Size() int {
	return xxx_messageInfo_CheckPoint.Size(m)
}
func (m *CheckPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckPoint.DiscardUnknown(m)
}

var xxx_messageInfo_CheckPoint proto.InternalMessageInfo

func (m *CheckPoint) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *CheckPoint) GetPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *CheckPoint) GetNumOfRows() int64 {
	if m != nil {
		return m.NumOfRows
	}
	return 0
}

type DataNodeTtMsg struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	ChannelName          string            `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	Timestamp            uint64            `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DataNodeTtMsg) Reset()         { *m = DataNodeTtMsg{} }
func (m *DataNodeTtMsg) String() string { return proto.CompactTextString(m) }
func (*DataNodeTtMsg) ProtoMessage()    {}
func (*DataNodeTtMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{37}
}

func (m *DataNodeTtMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataNodeTtMsg.Unmarshal(m, b)
}
func (m *DataNodeTtMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataNodeTtMsg.Marshal(b, m, deterministic)
}
func (m *DataNodeTtMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataNodeTtMsg.Merge(m, src)
}
func (m *DataNodeTtMsg) XXX_Size() int {
	return xxx_messageInfo_DataNodeTtMsg.Size(m)
}
func (m *DataNodeTtMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_DataNodeTtMsg.DiscardUnknown(m)
}

var xxx_messageInfo_DataNodeTtMsg proto.InternalMessageInfo

func (m *DataNodeTtMsg) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *DataNodeTtMsg) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *DataNodeTtMsg) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type ChannelStatus struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State                ChannelWatchState `protobuf:"varint,2,opt,name=state,proto3,enum=milvus.proto.data.ChannelWatchState" json:"state,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ChannelStatus) Reset()         { *m = ChannelStatus{} }
func (m *ChannelStatus) String() string { return proto.CompactTextString(m) }
func (*ChannelStatus) ProtoMessage()    {}
func (*ChannelStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{38}
}

func (m *ChannelStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelStatus.Unmarshal(m, b)
}
func (m *ChannelStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelStatus.Marshal(b, m, deterministic)
}
func (m *ChannelStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelStatus.Merge(m, src)
}
func (m *ChannelStatus) XXX_Size() int {
	return xxx_messageInfo_ChannelStatus.Size(m)
}
func (m *ChannelStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelStatus proto.InternalMessageInfo

func (m *ChannelStatus) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChannelStatus) GetState() ChannelWatchState {
	if m != nil {
		return m.State
	}
	return ChannelWatchState_Uncomplete
}

func (m *ChannelStatus) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

type DataNodeInfo struct {
	Address              string           `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Version              int64            `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Channels             []*ChannelStatus `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DataNodeInfo) Reset()         { *m = DataNodeInfo{} }
func (m *DataNodeInfo) String() string { return proto.CompactTextString(m) }
func (*DataNodeInfo) ProtoMessage()    {}
func (*DataNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{39}
}

func (m *DataNodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataNodeInfo.Unmarshal(m, b)
}
func (m *DataNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataNodeInfo.Marshal(b, m, deterministic)
}
func (m *DataNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataNodeInfo.Merge(m, src)
}
func (m *DataNodeInfo) XXX_Size() int {
	return xxx_messageInfo_DataNodeInfo.Size(m)
}
func (m *DataNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DataNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DataNodeInfo proto.InternalMessageInfo

func (m *DataNodeInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *DataNodeInfo) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *DataNodeInfo) GetChannels() []*ChannelStatus {
	if m != nil {
		return m.Channels
	}
	return nil
}

type SegmentBinlogs struct {
	SegmentID            int64          `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	FieldBinlogs         []*FieldBinlog `protobuf:"bytes,2,rep,name=fieldBinlogs,proto3" json:"fieldBinlogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SegmentBinlogs) Reset()         { *m = SegmentBinlogs{} }
func (m *SegmentBinlogs) String() string { return proto.CompactTextString(m) }
func (*SegmentBinlogs) ProtoMessage()    {}
func (*SegmentBinlogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{40}
}

func (m *SegmentBinlogs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentBinlogs.Unmarshal(m, b)
}
func (m *SegmentBinlogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentBinlogs.Marshal(b, m, deterministic)
}
func (m *SegmentBinlogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentBinlogs.Merge(m, src)
}
func (m *SegmentBinlogs) XXX_Size() int {
	return xxx_messageInfo_SegmentBinlogs.Size(m)
}
func (m *SegmentBinlogs) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentBinlogs.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentBinlogs proto.InternalMessageInfo

func (m *SegmentBinlogs) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SegmentBinlogs) GetFieldBinlogs() []*FieldBinlog {
	if m != nil {
		return m.FieldBinlogs
	}
	return nil
}

type FieldBinlog struct {
	FieldID              int64    `protobuf:"varint,1,opt,name=fieldID,proto3" json:"fieldID,omitempty"`
	Binlogs              []string `protobuf:"bytes,2,rep,name=binlogs,proto3" json:"binlogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldBinlog) Reset()         { *m = FieldBinlog{} }
func (m *FieldBinlog) String() string { return proto.CompactTextString(m) }
func (*FieldBinlog) ProtoMessage()    {}
func (*FieldBinlog) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{41}
}

func (m *FieldBinlog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldBinlog.Unmarshal(m, b)
}
func (m *FieldBinlog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldBinlog.Marshal(b, m, deterministic)
}
func (m *FieldBinlog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldBinlog.Merge(m, src)
}
func (m *FieldBinlog) XXX_Size() int {
	return xxx_messageInfo_FieldBinlog.Size(m)
}
func (m *FieldBinlog) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldBinlog.DiscardUnknown(m)
}

var xxx_messageInfo_FieldBinlog proto.InternalMessageInfo

func (m *FieldBinlog) GetFieldID() int64 {
	if m != nil {
		return m.FieldID
	}
	return 0
}

func (m *FieldBinlog) GetBinlogs() []string {
	if m != nil {
		return m.Binlogs
	}
	return nil
}

type GetRecoveryInfoResponse struct {
	Status               *commonpb.Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Channels             []*VchannelInfo   `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
	Binlogs              []*SegmentBinlogs `protobuf:"bytes,3,rep,name=binlogs,proto3" json:"binlogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetRecoveryInfoResponse) Reset()         { *m = GetRecoveryInfoResponse{} }
func (m *GetRecoveryInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetRecoveryInfoResponse) ProtoMessage()    {}
func (*GetRecoveryInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{42}
}

func (m *GetRecoveryInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecoveryInfoResponse.Unmarshal(m, b)
}
func (m *GetRecoveryInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecoveryInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetRecoveryInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecoveryInfoResponse.Merge(m, src)
}
func (m *GetRecoveryInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetRecoveryInfoResponse.Size(m)
}
func (m *GetRecoveryInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecoveryInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecoveryInfoResponse proto.InternalMessageInfo

func (m *GetRecoveryInfoResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetRecoveryInfoResponse) GetChannels() []*VchannelInfo {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *GetRecoveryInfoResponse) GetBinlogs() []*SegmentBinlogs {
	if m != nil {
		return m.Binlogs
	}
	return nil
}

type GetRecoveryInfoRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CollectionID         int64             `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID          int64             `protobuf:"varint,3,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetRecoveryInfoRequest) Reset()         { *m = GetRecoveryInfoRequest{} }
func (m *GetRecoveryInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecoveryInfoRequest) ProtoMessage()    {}
func (*GetRecoveryInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3385cd32ad6cfe64, []int{43}
}

func (m *GetRecoveryInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecoveryInfoRequest.Unmarshal(m, b)
}
func (m *GetRecoveryInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecoveryInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetRecoveryInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecoveryInfoRequest.Merge(m, src)
}
func (m *GetRecoveryInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecoveryInfoRequest.Size(m)
}
func (m *GetRecoveryInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecoveryInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecoveryInfoRequest proto.InternalMessageInfo

func (m *GetRecoveryInfoRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetRecoveryInfoRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *GetRecoveryInfoRequest) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func init() {
	proto.RegisterEnum("milvus.proto.data.ChannelWatchState", ChannelWatchState_name, ChannelWatchState_value)
	proto.RegisterType((*RegisterNodeRequest)(nil), "milvus.proto.data.RegisterNodeRequest")
	proto.RegisterType((*RegisterNodeResponse)(nil), "milvus.proto.data.RegisterNodeResponse")
	proto.RegisterType((*FlushRequest)(nil), "milvus.proto.data.FlushRequest")
	proto.RegisterType((*SegmentIDRequest)(nil), "milvus.proto.data.SegmentIDRequest")
	proto.RegisterType((*AssignSegmentIDRequest)(nil), "milvus.proto.data.AssignSegmentIDRequest")
	proto.RegisterType((*SegmentIDAssignment)(nil), "milvus.proto.data.SegmentIDAssignment")
	proto.RegisterType((*AssignSegmentIDResponse)(nil), "milvus.proto.data.AssignSegmentIDResponse")
	proto.RegisterType((*ShowSegmentsRequest)(nil), "milvus.proto.data.ShowSegmentsRequest")
	proto.RegisterType((*ShowSegmentsResponse)(nil), "milvus.proto.data.ShowSegmentsResponse")
	proto.RegisterType((*GetSegmentStatesRequest)(nil), "milvus.proto.data.GetSegmentStatesRequest")
	proto.RegisterType((*SegmentStateInfo)(nil), "milvus.proto.data.SegmentStateInfo")
	proto.RegisterType((*GetSegmentStatesResponse)(nil), "milvus.proto.data.GetSegmentStatesResponse")
	proto.RegisterType((*GetSegmentInfoRequest)(nil), "milvus.proto.data.GetSegmentInfoRequest")
	proto.RegisterType((*GetSegmentInfoResponse)(nil), "milvus.proto.data.GetSegmentInfoResponse")
	proto.RegisterType((*GetInsertBinlogPathsRequest)(nil), "milvus.proto.data.GetInsertBinlogPathsRequest")
	proto.RegisterType((*GetInsertBinlogPathsResponse)(nil), "milvus.proto.data.GetInsertBinlogPathsResponse")
	proto.RegisterType((*GetInsertChannelsRequest)(nil), "milvus.proto.data.GetInsertChannelsRequest")
	proto.RegisterType((*GetCollectionStatisticsRequest)(nil), "milvus.proto.data.GetCollectionStatisticsRequest")
	proto.RegisterType((*GetCollectionStatisticsResponse)(nil), "milvus.proto.data.GetCollectionStatisticsResponse")
	proto.RegisterType((*GetPartitionStatisticsRequest)(nil), "milvus.proto.data.GetPartitionStatisticsRequest")
	proto.RegisterType((*GetPartitionStatisticsResponse)(nil), "milvus.proto.data.GetPartitionStatisticsResponse")
	proto.RegisterType((*GetSegmentInfoChannelRequest)(nil), "milvus.proto.data.GetSegmentInfoChannelRequest")
	proto.RegisterType((*VchannelInfo)(nil), "milvus.proto.data.VchannelInfo")
	proto.RegisterType((*WatchDmChannelsRequest)(nil), "milvus.proto.data.WatchDmChannelsRequest")
	proto.RegisterType((*FlushSegmentsRequest)(nil), "milvus.proto.data.FlushSegmentsRequest")
	proto.RegisterType((*SegmentMsg)(nil), "milvus.proto.data.SegmentMsg")
	proto.RegisterType((*SegmentFieldBinlogMeta)(nil), "milvus.proto.data.SegmentFieldBinlogMeta")
	proto.RegisterType((*DDLBinlogMeta)(nil), "milvus.proto.data.DDLBinlogMeta")
	proto.RegisterType((*FieldFlushMeta)(nil), "milvus.proto.data.FieldFlushMeta")
	proto.RegisterType((*SegmentFlushMeta)(nil), "milvus.proto.data.SegmentFlushMeta")
	proto.RegisterType((*DDLFlushMeta)(nil), "milvus.proto.data.DDLFlushMeta")
	proto.RegisterType((*CollectionInfo)(nil), "milvus.proto.data.CollectionInfo")
	proto.RegisterType((*SegmentInfo)(nil), "milvus.proto.data.SegmentInfo")
	proto.RegisterType((*ID2PathList)(nil), "milvus.proto.data.ID2PathList")
	proto.RegisterType((*SegmentStartPosition)(nil), "milvus.proto.data.SegmentStartPosition")
	proto.RegisterType((*SaveBinlogPathsRequest)(nil), "milvus.proto.data.SaveBinlogPathsRequest")
	proto.RegisterType((*CheckPoint)(nil), "milvus.proto.data.CheckPoint")
	proto.RegisterType((*DataNodeTtMsg)(nil), "milvus.proto.data.DataNodeTtMsg")
	proto.RegisterType((*ChannelStatus)(nil), "milvus.proto.data.ChannelStatus")
	proto.RegisterType((*DataNodeInfo)(nil), "milvus.proto.data.DataNodeInfo")
	proto.RegisterType((*SegmentBinlogs)(nil), "milvus.proto.data.SegmentBinlogs")
	proto.RegisterType((*FieldBinlog)(nil), "milvus.proto.data.FieldBinlog")
	proto.RegisterType((*GetRecoveryInfoResponse)(nil), "milvus.proto.data.GetRecoveryInfoResponse")
	proto.RegisterType((*GetRecoveryInfoRequest)(nil), "milvus.proto.data.GetRecoveryInfoRequest")
}

func init() { proto.RegisterFile("data_service.proto", fileDescriptor_3385cd32ad6cfe64) }

var fileDescriptor_3385cd32ad6cfe64 = []byte{
	// 2095 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x19, 0x5b, 0x6f, 0x1b, 0x59,
	0x39, 0xe3, 0x4b, 0x12, 0x7f, 0x1e, 0x3b, 0xc9, 0xd9, 0x90, 0xb5, 0xdc, 0x36, 0x4d, 0x87, 0xdd,
	0x36, 0xdb, 0x15, 0xc9, 0xd6, 0x45, 0xdc, 0xca, 0x82, 0x9a, 0xba, 0x8d, 0x2c, 0x92, 0x12, 0x4e,
	0xba, 0xbb, 0x12, 0x2b, 0x64, 0x4d, 0x3c, 0x27, 0xce, 0x90, 0xb9, 0x78, 0xe7, 0x8c, 0xd3, 0xf4,
	0xa9, 0xab, 0x05, 0x09, 0x81, 0x10, 0x0b, 0x0f, 0xbc, 0x03, 0x12, 0x12, 0x12, 0x2f, 0xfc, 0x03,
	0x5e, 0xf9, 0x05, 0xfc, 0x1e, 0x74, 0x2e, 0x73, 0x1f, 0xdb, 0x53, 0x87, 0x2a, 0x6f, 0x3e, 0xc7,
	0xdf, 0xed, 0x7c, 0xf7, 0xef, 0x1b, 0x40, 0x86, 0xee, 0xeb, 0x7d, 0x4a, 0xbc, 0x0b, 0x73, 0x40,
	0x76, 0x46, 0x9e, 0xeb, 0xbb, 0x68, 0xcd, 0x36, 0xad, 0x8b, 0x31, 0x15, 0xa7, 0x1d, 0x06, 0xd0,
	0x56, 0x07, 0xae, 0x6d, 0xbb, 0x8e, 0xb8, 0x6a, 0x37, 0x4d, 0xc7, 0x27, 0x9e, 0xa3, 0x5b, 0xf2,
	0xac, 0xc6, 0x11, 0xda, 0x2a, 0x1d, 0x9c, 0x11, 0x5b, 0x17, 0x27, 0xed, 0x35, 0xbc, 0x83, 0xc9,
	0xd0, 0xa4, 0x3e, 0xf1, 0x9e, 0xbb, 0x06, 0xc1, 0xe4, 0x8b, 0x31, 0xa1, 0x3e, 0xfa, 0x08, 0x2a,
	0x27, 0x3a, 0x25, 0x2d, 0x65, 0x4b, 0xd9, 0xae, 0x77, 0x6e, 0xee, 0x24, 0x58, 0x4a, 0x66, 0x87,
	0x74, 0xb8, 0xa7, 0x53, 0x82, 0x39, 0x24, 0xfa, 0x0e, 0x2c, 0xe9, 0x86, 0xe1, 0x11, 0x4a, 0x5b,
	0xa5, 0x29, 0x48, 0x8f, 0x05, 0x0c, 0x0e, 0x80, 0xb5, 0xaf, 0x15, 0x58, 0x4f, 0x4a, 0x40, 0x47,
	0xae, 0x43, 0x09, 0xda, 0x83, 0xba, 0xe9, 0x98, 0x7e, 0x7f, 0xa4, 0x7b, 0xba, 0x4d, 0xa5, 0x24,
	0x77, 0x92, 0x44, 0xc3, 0x87, 0xf6, 0x1c, 0xd3, 0x3f, 0xe2, 0x80, 0x18, 0xcc, 0xf0, 0x37, 0x7a,
	0x08, 0x8b, 0xd4, 0xd7, 0xfd, 0x71, 0x20, 0xd3, 0x8d, 0x5c, 0x99, 0x8e, 0x39, 0x08, 0x96, 0xa0,
	0xda, 0x25, 0xa8, 0xcf, 0xac, 0x31, 0x3d, 0x9b, 0x5f, 0x17, 0x08, 0x2a, 0xc6, 0x49, 0xaf, 0xcb,
	0x99, 0x96, 0x31, 0xff, 0x8d, 0x34, 0x50, 0x07, 0xae, 0x65, 0x91, 0x81, 0x6f, 0xba, 0x4e, 0xaf,
	0xdb, 0xaa, 0xf0, 0xff, 0x12, 0x77, 0xda, 0x9f, 0x14, 0x58, 0x3d, 0x26, 0x43, 0x9b, 0x38, 0x7e,
	0xaf, 0x1b, 0xb0, 0x5f, 0x87, 0xea, 0xc0, 0x1d, 0x3b, 0x3e, 0xe7, 0xdf, 0xc0, 0xe2, 0x80, 0xee,
	0x80, 0x3a, 0x38, 0xd3, 0x1d, 0x87, 0x58, 0x7d, 0x47, 0xb7, 0x09, 0x67, 0x55, 0xc3, 0x75, 0x79,
	0xf7, 0x5c, 0xb7, 0x49, 0x86, 0x63, 0x39, 0xcb, 0x11, 0x6d, 0x41, 0x7d, 0xa4, 0x7b, 0xbe, 0x99,
	0x10, 0x2a, 0x7e, 0xa5, 0xfd, 0x45, 0x81, 0x8d, 0xc7, 0x94, 0x9a, 0x43, 0x27, 0x23, 0xd9, 0x06,
	0x2c, 0x3a, 0xae, 0x41, 0x7a, 0x5d, 0x2e, 0x5a, 0x19, 0xcb, 0x13, 0xba, 0x01, 0xb5, 0x11, 0x21,
	0x5e, 0xdf, 0x73, 0xad, 0x40, 0xb0, 0x65, 0x76, 0x81, 0x5d, 0x8b, 0xa0, 0x9f, 0xc1, 0x1a, 0x4d,
	0x11, 0xa2, 0xad, 0xf2, 0x56, 0x79, 0xbb, 0xde, 0xf9, 0xe6, 0x4e, 0xc6, 0xb3, 0x77, 0xd2, 0x4c,
	0x71, 0x16, 0x5b, 0xfb, 0xb2, 0x04, 0xef, 0x84, 0x70, 0x42, 0x56, 0xf6, 0x9b, 0x69, 0x8e, 0x92,
	0x61, 0x28, 0x9e, 0x38, 0x14, 0xd1, 0x5c, 0xa8, 0xf2, 0x72, 0x5c, 0xe5, 0x05, 0x2c, 0x98, 0xd6,
	0x67, 0x35, 0xa3, 0x4f, 0x74, 0x1b, 0xea, 0xe4, 0x72, 0x64, 0x7a, 0xa4, 0xef, 0x9b, 0x36, 0x69,
	0x2d, 0x6e, 0x29, 0xdb, 0x15, 0x0c, 0xe2, 0xea, 0x85, 0x69, 0x93, 0x98, 0xcf, 0x2e, 0x15, 0xf7,
	0xd9, 0xbf, 0x29, 0xf0, 0x6e, 0xc6, 0x4a, 0x32, 0x90, 0x30, 0xac, 0xf2, 0x97, 0x47, 0x9a, 0x61,
	0xd1, 0xc4, 0x14, 0x7e, 0x77, 0x9a, 0xc2, 0x23, 0x70, 0x9c, 0xc1, 0x9f, 0x2f, 0xb0, 0xfe, 0xaa,
	0xc0, 0x3b, 0xc7, 0x67, 0xee, 0x4b, 0xc9, 0x82, 0xce, 0x1f, 0x60, 0x69, 0x53, 0x94, 0x66, 0x9b,
	0xa2, 0x9c, 0x35, 0x45, 0x10, 0xa6, 0x95, 0x28, 0x4c, 0xb5, 0x73, 0x58, 0x4f, 0x8a, 0x28, 0x95,
	0xb8, 0x09, 0x10, 0x3a, 0x9e, 0x50, 0x5f, 0x19, 0xc7, 0x6e, 0xe6, 0x53, 0xc8, 0x39, 0xbc, 0xbb,
	0x4f, 0x7c, 0xc9, 0x8b, 0xfd, 0x47, 0xae, 0xa0, 0x93, 0xa4, 0x84, 0xa5, 0xb4, 0x84, 0xda, 0xbf,
	0x4a, 0x61, 0x72, 0xe1, 0xac, 0x7a, 0xce, 0xa9, 0x8b, 0x6e, 0x42, 0x2d, 0x04, 0x91, 0x61, 0x12,
	0x5d, 0xa0, 0xef, 0x42, 0x95, 0x49, 0x2a, 0x62, 0xa4, 0x99, 0x4e, 0xbe, 0xc1, 0x9b, 0x62, 0x34,
	0xb1, 0x80, 0x47, 0x3d, 0x68, 0x52, 0x5f, 0xf7, 0xfc, 0xfe, 0xc8, 0xa5, 0x5c, 0xdb, 0x5c, 0xfd,
	0xf5, 0x8e, 0x36, 0x21, 0x7d, 0x1f, 0xd2, 0xe1, 0x91, 0x84, 0xc4, 0x0d, 0x8e, 0x19, 0x1c, 0xd1,
	0x53, 0x50, 0x89, 0x63, 0x44, 0x84, 0x2a, 0x85, 0x09, 0xd5, 0x89, 0x63, 0x84, 0x64, 0x22, 0xfb,
	0x54, 0x8b, 0xdb, 0xe7, 0xf7, 0x0a, 0xb4, 0xb2, 0x06, 0x92, 0x1e, 0x11, 0x51, 0x54, 0x0a, 0x53,
	0x44, 0x8f, 0x04, 0x12, 0x11, 0x06, 0x9a, 0x9a, 0xf2, 0x42, 0x23, 0x61, 0x89, 0xa2, 0x99, 0xf0,
	0x8d, 0x48, 0x1a, 0xfe, 0xcf, 0x5b, 0x73, 0x96, 0x5f, 0x29, 0xb0, 0x91, 0xe6, 0x75, 0x95, 0x77,
	0x7f, 0x1b, 0xaa, 0xa6, 0x73, 0xea, 0x06, 0xcf, 0xde, 0x9c, 0x92, 0x78, 0x18, 0x2f, 0x01, 0xac,
	0xd9, 0x70, 0x63, 0x9f, 0xf8, 0x3d, 0x87, 0x12, 0xcf, 0xdf, 0x33, 0x1d, 0xcb, 0x1d, 0x1e, 0xe9,
	0xfe, 0xd9, 0x15, 0x62, 0x24, 0xe1, 0xee, 0xa5, 0x94, 0xbb, 0x6b, 0xff, 0x50, 0xe0, 0x66, 0x3e,
	0x3f, 0xf9, 0xf4, 0x36, 0x2c, 0x9f, 0x9a, 0xc4, 0x32, 0xa2, 0x14, 0x10, 0x9e, 0x59, 0xac, 0x8c,
	0x18, 0xb0, 0x7c, 0xe1, 0xa4, 0x46, 0xe5, 0xd8, 0xf7, 0x4c, 0x67, 0x78, 0x60, 0x52, 0x1f, 0x0b,
	0xf8, 0x98, 0x3e, 0xcb, 0xc5, 0x3d, 0xf3, 0xd7, 0xc2, 0x33, 0x85, 0xa8, 0x4f, 0x44, 0xe9, 0xa2,
	0x6f, 0xb7, 0x61, 0xc9, 0x69, 0x1f, 0xb4, 0xdf, 0x29, 0xb0, 0xb9, 0x4f, 0xfc, 0x27, 0xe1, 0x1d,
	0x13, 0xd3, 0xa4, 0xbe, 0x39, 0xb8, 0x06, 0x61, 0xbe, 0x56, 0xe0, 0xf6, 0x44, 0x61, 0xa4, 0x05,
	0x65, 0x46, 0x0b, 0x0a, 0x60, 0x7e, 0x46, 0xfb, 0x09, 0x79, 0xf5, 0xa9, 0x6e, 0x8d, 0xc9, 0x91,
	0x6e, 0x7a, 0x22, 0xa3, 0xcd, 0x99, 0xdf, 0xff, 0xa9, 0xc0, 0xad, 0x7d, 0xc2, 0x9a, 0x51, 0x51,
	0x73, 0xae, 0x51, 0x3b, 0x05, 0x3a, 0xbd, 0x3f, 0x08, 0x63, 0xe6, 0x4a, 0x7b, 0x2d, 0xea, 0xdb,
	0xe4, 0xe1, 0x18, 0xcb, 0x0b, 0xd2, 0xd1, 0xa5, 0xf2, 0xb4, 0x3f, 0x97, 0x40, 0xfd, 0x54, 0xf6,
	0x6d, 0xbc, 0x9a, 0xa5, 0xf5, 0xa0, 0xe4, 0xeb, 0x21, 0xd6, 0xea, 0xe5, 0x75, 0x7f, 0xfb, 0xd0,
	0xa0, 0x84, 0x9c, 0xcf, 0x53, 0xbb, 0x54, 0x86, 0x18, 0xd6, 0x9c, 0x03, 0x58, 0x1b, 0x3b, 0xa7,
	0x6c, 0x94, 0x20, 0x46, 0xd0, 0x50, 0xb4, 0x2a, 0x85, 0x12, 0x60, 0x16, 0x11, 0x6d, 0xc3, 0x4a,
	0x9a, 0x56, 0x95, 0xe7, 0xa0, 0xf4, 0xb5, 0xf6, 0x5b, 0x05, 0x36, 0x3e, 0xd3, 0xfd, 0xc1, 0x59,
	0xd7, 0xbe, 0x7a, 0x6a, 0xf8, 0x18, 0x6a, 0x17, 0x52, 0x3b, 0x41, 0x6e, 0xbb, 0x9d, 0x23, 0x7c,
	0xdc, 0x0e, 0x38, 0xc2, 0x60, 0xe3, 0xc3, 0x3a, 0x9f, 0xa6, 0xae, 0xde, 0xf4, 0xcd, 0xeb, 0xf9,
	0xc9, 0x5a, 0x57, 0xc9, 0xd4, 0xba, 0x4b, 0x00, 0x29, 0xdc, 0x21, 0x1d, 0xce, 0x21, 0xd7, 0xf7,
	0x60, 0x49, 0x52, 0x93, 0xce, 0x3d, 0xcb, 0xb8, 0x01, 0xb8, 0x76, 0x0c, 0x1b, 0xf2, 0xfe, 0x19,
	0x2b, 0x23, 0xa2, 0xe4, 0x1c, 0x12, 0x5f, 0x47, 0x2d, 0x58, 0x92, 0x95, 0x45, 0x3a, 0x71, 0x70,
	0x64, 0xf3, 0xc3, 0x09, 0x87, 0xeb, 0xb3, 0xf2, 0x21, 0xfd, 0x17, 0x4e, 0xc2, 0x6a, 0xa5, 0xfd,
	0x02, 0x1a, 0xdd, 0xee, 0x41, 0x8c, 0xd6, 0x5d, 0x58, 0x31, 0x0c, 0xab, 0x1f, 0xc7, 0x52, 0x38,
	0x56, 0xc3, 0x30, 0xac, 0xa8, 0xcc, 0xa1, 0xf7, 0xa0, 0xe9, 0xd3, 0x7e, 0x96, 0xb8, 0xea, 0xd3,
	0x08, 0x4a, 0x3b, 0x84, 0x26, 0x17, 0x96, 0x1b, 0x75, 0x86, 0xac, 0x77, 0x40, 0x8d, 0x91, 0x13,
	0xee, 0x53, 0xc3, 0xf5, 0x48, 0x58, 0xca, 0x2a, 0x48, 0xd0, 0x95, 0x46, 0x14, 0xa7, 0x77, 0xa5,
	0xb7, 0x00, 0x4c, 0xda, 0x97, 0x4e, 0xcf, 0x65, 0x5c, 0xc6, 0x35, 0x93, 0x3e, 0x13, 0x17, 0xe8,
	0xfb, 0xb0, 0xc8, 0xf9, 0x8b, 0xf0, 0xc8, 0x24, 0x29, 0x6e, 0x8d, 0xe4, 0x0b, 0xb0, 0x44, 0xd0,
	0x3e, 0x01, 0xb5, 0xdb, 0x3d, 0x88, 0xe4, 0x28, 0x92, 0x4f, 0x0a, 0xbc, 0xf1, 0x35, 0x34, 0xa3,
	0xa2, 0xc4, 0x13, 0x55, 0x13, 0x4a, 0x21, 0xb9, 0x52, 0xaf, 0x8b, 0x3e, 0x86, 0x45, 0xb1, 0x95,
	0x91, 0x1e, 0xf4, 0x7e, 0x52, 0x66, 0xb9, 0xb1, 0x89, 0x55, 0x36, 0x7e, 0x81, 0x25, 0x12, 0xf3,
	0xf0, 0x30, 0x91, 0x8b, 0x61, 0xba, 0x8c, 0x63, 0x37, 0xda, 0xbf, 0xcb, 0x50, 0x8f, 0x39, 0x60,
	0x86, 0xfd, 0xff, 0x67, 0x9c, 0x7a, 0x1f, 0x9a, 0x26, 0xef, 0x47, 0xfa, 0x32, 0xfa, 0x79, 0x91,
	0xa9, 0xe1, 0x86, 0x19, 0xef, 0x52, 0xd0, 0x26, 0xd4, 0x9d, 0xb1, 0xdd, 0x77, 0x4f, 0xfb, 0x9e,
	0xfb, 0x92, 0xca, 0x11, 0xb9, 0xe6, 0x8c, 0xed, 0x9f, 0x9e, 0x62, 0xf7, 0x25, 0x8d, 0x86, 0x8e,
	0xc5, 0x37, 0x1c, 0x3a, 0x9e, 0x82, 0x6a, 0xd8, 0x56, 0x94, 0xb6, 0x97, 0x8a, 0x4f, 0x0a, 0x86,
	0x6d, 0x85, 0x59, 0x7b, 0x13, 0xea, 0xb6, 0x7e, 0xc9, 0x84, 0xeb, 0x3b, 0x63, 0xbb, 0xb5, 0x2c,
	0xe4, 0xb3, 0xf5, 0x4b, 0xec, 0xbe, 0x7c, 0x3e, 0xb6, 0xd1, 0x36, 0xac, 0x5a, 0x3a, 0xf5, 0xfb,
	0xf1, 0x29, 0xbe, 0xc6, 0xa7, 0xf8, 0x26, 0xbb, 0x7f, 0x1a, 0x4d, 0xf2, 0xd9, 0x29, 0x08, 0xe6,
	0x9c, 0x82, 0xb4, 0x87, 0x50, 0xef, 0x75, 0x3b, 0xcc, 0x9d, 0x58, 0xeb, 0x98, 0x31, 0xe0, 0x3a,
	0x54, 0x8f, 0x62, 0xde, 0x57, 0x0d, 0xfc, 0x6e, 0x3d, 0xd2, 0x53, 0x6c, 0xa4, 0xca, 0xca, 0xa5,
	0xcc, 0x3b, 0x9d, 0x4d, 0x6f, 0xa8, 0x7f, 0x53, 0x86, 0x8d, 0x63, 0xfd, 0x82, 0xbc, 0xfd, 0xde,
	0xbd, 0x50, 0x21, 0x38, 0x80, 0x35, 0x1e, 0xe8, 0x9d, 0x98, 0x3c, 0x53, 0xea, 0x71, 0x4c, 0xe1,
	0x38, 0x8b, 0x88, 0x7e, 0xcc, 0x1a, 0x09, 0x32, 0x38, 0x3f, 0x72, 0xcd, 0xa0, 0x16, 0xd7, 0x3b,
	0xb7, 0x72, 0xe8, 0x3c, 0x09, 0xa1, 0x70, 0x1c, 0x03, 0x1d, 0xc1, 0x4a, 0xd2, 0x0c, 0xb4, 0xb5,
	0xc8, 0x89, 0xdc, 0x9b, 0x3a, 0x14, 0x46, 0xda, 0xc7, 0xcd, 0x84, 0x31, 0x28, 0xcf, 0xc4, 0x32,
	0x2d, 0x2e, 0xf1, 0xb4, 0x18, 0x1c, 0x59, 0x9a, 0x85, 0x48, 0x8e, 0x19, 0x09, 0xf6, 0x47, 0xb0,
	0x1c, 0x7a, 0x46, 0xa9, 0xb0, 0x67, 0x84, 0x38, 0xe9, 0x08, 0x2f, 0xa7, 0x22, 0x5c, 0xfb, 0x4a,
	0x81, 0x46, 0x57, 0xf7, 0xf5, 0xe7, 0xae, 0x41, 0x5e, 0xcc, 0x59, 0x74, 0x0b, 0x6c, 0xf1, 0x6e,
	0x42, 0x8d, 0x05, 0x27, 0xf5, 0x75, 0x7b, 0xc4, 0x85, 0xa8, 0xe0, 0xe8, 0x82, 0x4d, 0xb8, 0x0d,
	0x99, 0x92, 0x44, 0xdb, 0xc9, 0xfa, 0x0b, 0x4e, 0x4a, 0x14, 0x47, 0xfe, 0x1b, 0xfd, 0x20, 0xb9,
	0x01, 0x79, 0x2f, 0xd7, 0xbc, 0x9c, 0x08, 0x6f, 0xb8, 0x12, 0xf9, 0xa8, 0xc8, 0xcc, 0xf2, 0xa5,
	0x02, 0x6a, 0xa0, 0x0a, 0x9e, 0x9a, 0x5b, 0xd1, 0x1a, 0x5d, 0xc8, 0x11, 0x1c, 0xd9, 0x3f, 0x17,
	0xc4, 0xa3, 0x81, 0x51, 0xca, 0x38, 0x38, 0xa2, 0x1f, 0xc2, 0x72, 0xd8, 0xa1, 0x89, 0x4d, 0xea,
	0xd6, 0x64, 0x39, 0x65, 0x8f, 0x1d, 0x62, 0x68, 0x1e, 0x34, 0xa5, 0x73, 0x09, 0xef, 0xa6, 0x33,
	0xbc, 0x63, 0x0f, 0xd4, 0xd3, 0xa8, 0x5b, 0x99, 0x36, 0xd1, 0xc7, 0x9a, 0x1a, 0x9c, 0xc0, 0xd1,
	0x1e, 0x43, 0x3d, 0xf6, 0xe7, 0x94, 0x0e, 0xa2, 0x05, 0x4b, 0x27, 0x31, 0x3e, 0x35, 0x1c, 0x1c,
	0xb5, 0xff, 0x28, 0x7c, 0x79, 0x86, 0xc9, 0xc0, 0xbd, 0x20, 0xde, 0xab, 0xab, 0xaf, 0x28, 0x1e,
	0xc5, 0xb4, 0x58, 0xb0, 0xcf, 0x0d, 0x11, 0xd0, 0xa3, 0x48, 0xce, 0xf2, 0xc4, 0xae, 0x23, 0xa9,
	0xe6, 0xe8, 0x29, 0x7f, 0x14, 0xcb, 0x96, 0xe4, 0x53, 0xae, 0x75, 0x35, 0x7a, 0xff, 0x01, 0xac,
	0x65, 0xfc, 0x1a, 0x35, 0x01, 0x3e, 0x71, 0x06, 0xae, 0x3d, 0xb2, 0x88, 0x4f, 0x56, 0x17, 0x90,
	0x0a, 0xcb, 0x4f, 0x82, 0x93, 0xd2, 0xf9, 0x6f, 0x03, 0xea, 0xcc, 0x95, 0x8f, 0xc5, 0xc7, 0x2a,
	0x34, 0x02, 0xc4, 0xa7, 0x71, 0x7b, 0xe4, 0x3a, 0xe1, 0xf6, 0x0c, 0x7d, 0x34, 0x21, 0x93, 0x64,
	0x41, 0xa5, 0x0a, 0xda, 0x77, 0x27, 0x60, 0xa4, 0xc0, 0xb5, 0x05, 0x64, 0x73, 0x8e, 0xac, 0xf4,
	0xbe, 0x30, 0x07, 0xe7, 0x41, 0xbf, 0x31, 0x85, 0x63, 0x0a, 0x34, 0xe0, 0x98, 0x5a, 0xca, 0xc9,
	0x83, 0xd8, 0xdc, 0x04, 0x3e, 0xa6, 0x2d, 0xa0, 0x2f, 0x60, 0x9d, 0x8d, 0xa7, 0xe1, 0x94, 0x1c,
	0x30, 0xec, 0x4c, 0x66, 0x98, 0x01, 0x7e, 0x43, 0x96, 0x3a, 0xa8, 0xf1, 0x6f, 0x65, 0x28, 0x6f,
	0x81, 0x9f, 0xf3, 0x39, 0xaf, 0x7d, 0x6f, 0x26, 0x5c, 0xc8, 0x62, 0x1f, 0xaa, 0xbc, 0x01, 0x46,
	0x79, 0xde, 0x1f, 0xff, 0x2e, 0xd6, 0x9e, 0x16, 0x55, 0xda, 0x02, 0xfa, 0x25, 0xac, 0xa4, 0xbe,
	0x48, 0xa0, 0x0f, 0x72, 0x48, 0xe6, 0x7f, 0x5b, 0x6a, 0xdf, 0x2f, 0x02, 0x1a, 0xd7, 0x4b, 0x7c,
	0x6b, 0x9f, 0xab, 0x97, 0x9c, 0x2f, 0x0f, 0xb9, 0x7a, 0xc9, 0x5b, 0xff, 0x6b, 0x0b, 0x68, 0x08,
	0xcd, 0xe4, 0x32, 0x02, 0x6d, 0xe7, 0x20, 0xe7, 0xee, 0x67, 0xdb, 0x1f, 0x14, 0x80, 0x0c, 0x19,
	0xd9, 0xb0, 0x9a, 0xde, 0x39, 0xa3, 0xfb, 0x53, 0x09, 0x24, 0xe3, 0xe5, 0xc3, 0x42, 0xb0, 0x21,
	0xbb, 0x57, 0xdc, 0x8b, 0x33, 0x3b, 0x4f, 0xb4, 0x93, 0x4f, 0x66, 0xd2, 0x32, 0xb6, 0xbd, 0x5b,
	0x18, 0x3e, 0x64, 0x4d, 0x60, 0x2d, 0xb3, 0xc3, 0x44, 0x1f, 0x4e, 0xa3, 0x93, 0x5a, 0x67, 0xb4,
	0x67, 0x6f, 0x59, 0xb5, 0x05, 0xf4, 0x95, 0xa8, 0x14, 0x79, 0x7b, 0x41, 0xf4, 0x20, 0x9f, 0xdb,
	0x94, 0x85, 0x66, 0xbb, 0xf3, 0x26, 0x28, 0xe1, 0x5b, 0x5f, 0xf3, 0x14, 0x9f, 0xb3, 0x5b, 0x4b,
	0xe7, 0xa7, 0x80, 0xde, 0xe4, 0xa5, 0x61, 0xfb, 0xc1, 0x1b, 0x60, 0x84, 0x02, 0xb8, 0xe9, 0x8f,
	0x07, 0x41, 0xba, 0xda, 0x9d, 0xe9, 0x9c, 0xf3, 0xe5, 0xaa, 0xcf, 0x61, 0x25, 0xd5, 0xfb, 0xe7,
	0xc6, 0x7f, 0xfe, 0x7c, 0x50, 0x20, 0xb9, 0xa4, 0x2a, 0x26, 0x9a, 0x10, 0x64, 0x39, 0x55, 0xb5,
	0x7d, 0xbf, 0x08, 0x68, 0xf0, 0x90, 0xce, 0xdf, 0xcb, 0xb0, 0x1c, 0xf4, 0x68, 0xd7, 0x50, 0xd5,
	0xae, 0xa1, 0xcc, 0x7c, 0x0e, 0x2b, 0xa9, 0xfd, 0x61, 0xae, 0x76, 0xf3, 0x77, 0x8c, 0xb3, 0x4c,
	0xf7, 0x19, 0x34, 0x12, 0x0b, 0x41, 0x74, 0x6f, 0x52, 0xa1, 0x49, 0x67, 0xeb, 0xe9, 0x84, 0xf7,
	0x1e, 0xfe, 0xfc, 0xc1, 0xd0, 0xf4, 0xcf, 0xc6, 0x27, 0xec, 0x9f, 0x5d, 0x01, 0xfa, 0x2d, 0xd3,
	0x95, 0xbf, 0x76, 0x03, 0x05, 0xed, 0x72, 0xec, 0x5d, 0xc6, 0x66, 0x74, 0x72, 0xb2, 0xc8, 0x4f,
	0x0f, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0xfb, 0xbe, 0x88, 0x02, 0x69, 0x23, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataServiceClient is the client API for DataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataServiceClient interface {
	GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error)
	GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	RegisterNode(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*RegisterNodeResponse, error)
	Flush(ctx context.Context, in *FlushRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	AssignSegmentID(ctx context.Context, in *AssignSegmentIDRequest, opts ...grpc.CallOption) (*AssignSegmentIDResponse, error)
	ShowSegments(ctx context.Context, in *ShowSegmentsRequest, opts ...grpc.CallOption) (*ShowSegmentsResponse, error)
	GetSegmentInfo(ctx context.Context, in *GetSegmentInfoRequest, opts ...grpc.CallOption) (*GetSegmentInfoResponse, error)
	GetSegmentStates(ctx context.Context, in *GetSegmentStatesRequest, opts ...grpc.CallOption) (*GetSegmentStatesResponse, error)
	GetInsertBinlogPaths(ctx context.Context, in *GetInsertBinlogPathsRequest, opts ...grpc.CallOption) (*GetInsertBinlogPathsResponse, error)
	GetInsertChannels(ctx context.Context, in *GetInsertChannelsRequest, opts ...grpc.CallOption) (*internalpb.StringList, error)
	GetCollectionStatistics(ctx context.Context, in *GetCollectionStatisticsRequest, opts ...grpc.CallOption) (*GetCollectionStatisticsResponse, error)
	GetPartitionStatistics(ctx context.Context, in *GetPartitionStatisticsRequest, opts ...grpc.CallOption) (*GetPartitionStatisticsResponse, error)
	GetSegmentInfoChannel(ctx context.Context, in *GetSegmentInfoChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	SaveBinlogPaths(ctx context.Context, in *SaveBinlogPathsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	GetRecoveryInfo(ctx context.Context, in *GetRecoveryInfoRequest, opts ...grpc.CallOption) (*GetRecoveryInfoResponse, error)
}

type dataServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataServiceClient(cc *grpc.ClientConn) DataServiceClient {
	return &dataServiceClient{cc}
}

func (c *dataServiceClient) GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error) {
	out := new(internalpb.ComponentStates)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/GetComponentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/GetTimeTickChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/GetStatisticsChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) RegisterNode(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*RegisterNodeResponse, error) {
	out := new(RegisterNodeResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/RegisterNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) Flush(ctx context.Context, in *FlushRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/Flush", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) AssignSegmentID(ctx context.Context, in *AssignSegmentIDRequest, opts ...grpc.CallOption) (*AssignSegmentIDResponse, error) {
	out := new(AssignSegmentIDResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/AssignSegmentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) ShowSegments(ctx context.Context, in *ShowSegmentsRequest, opts ...grpc.CallOption) (*ShowSegmentsResponse, error) {
	out := new(ShowSegmentsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/ShowSegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetSegmentInfo(ctx context.Context, in *GetSegmentInfoRequest, opts ...grpc.CallOption) (*GetSegmentInfoResponse, error) {
	out := new(GetSegmentInfoResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/GetSegmentInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetSegmentStates(ctx context.Context, in *GetSegmentStatesRequest, opts ...grpc.CallOption) (*GetSegmentStatesResponse, error) {
	out := new(GetSegmentStatesResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/GetSegmentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetInsertBinlogPaths(ctx context.Context, in *GetInsertBinlogPathsRequest, opts ...grpc.CallOption) (*GetInsertBinlogPathsResponse, error) {
	out := new(GetInsertBinlogPathsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/GetInsertBinlogPaths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetInsertChannels(ctx context.Context, in *GetInsertChannelsRequest, opts ...grpc.CallOption) (*internalpb.StringList, error) {
	out := new(internalpb.StringList)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/GetInsertChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetCollectionStatistics(ctx context.Context, in *GetCollectionStatisticsRequest, opts ...grpc.CallOption) (*GetCollectionStatisticsResponse, error) {
	out := new(GetCollectionStatisticsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/GetCollectionStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetPartitionStatistics(ctx context.Context, in *GetPartitionStatisticsRequest, opts ...grpc.CallOption) (*GetPartitionStatisticsResponse, error) {
	out := new(GetPartitionStatisticsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/GetPartitionStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetSegmentInfoChannel(ctx context.Context, in *GetSegmentInfoChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/GetSegmentInfoChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) SaveBinlogPaths(ctx context.Context, in *SaveBinlogPathsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/SaveBinlogPaths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) GetRecoveryInfo(ctx context.Context, in *GetRecoveryInfoRequest, opts ...grpc.CallOption) (*GetRecoveryInfoResponse, error) {
	out := new(GetRecoveryInfoResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataService/GetRecoveryInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataServiceServer is the server API for DataService service.
type DataServiceServer interface {
	GetComponentStates(context.Context, *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error)
	GetTimeTickChannel(context.Context, *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(context.Context, *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error)
	RegisterNode(context.Context, *RegisterNodeRequest) (*RegisterNodeResponse, error)
	Flush(context.Context, *FlushRequest) (*commonpb.Status, error)
	AssignSegmentID(context.Context, *AssignSegmentIDRequest) (*AssignSegmentIDResponse, error)
	ShowSegments(context.Context, *ShowSegmentsRequest) (*ShowSegmentsResponse, error)
	GetSegmentInfo(context.Context, *GetSegmentInfoRequest) (*GetSegmentInfoResponse, error)
	GetSegmentStates(context.Context, *GetSegmentStatesRequest) (*GetSegmentStatesResponse, error)
	GetInsertBinlogPaths(context.Context, *GetInsertBinlogPathsRequest) (*GetInsertBinlogPathsResponse, error)
	GetInsertChannels(context.Context, *GetInsertChannelsRequest) (*internalpb.StringList, error)
	GetCollectionStatistics(context.Context, *GetCollectionStatisticsRequest) (*GetCollectionStatisticsResponse, error)
	GetPartitionStatistics(context.Context, *GetPartitionStatisticsRequest) (*GetPartitionStatisticsResponse, error)
	GetSegmentInfoChannel(context.Context, *GetSegmentInfoChannelRequest) (*milvuspb.StringResponse, error)
	SaveBinlogPaths(context.Context, *SaveBinlogPathsRequest) (*commonpb.Status, error)
	GetRecoveryInfo(context.Context, *GetRecoveryInfoRequest) (*GetRecoveryInfoResponse, error)
}

// UnimplementedDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataServiceServer struct {
}

func (*UnimplementedDataServiceServer) GetComponentStates(ctx context.Context, req *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComponentStates not implemented")
}
func (*UnimplementedDataServiceServer) GetTimeTickChannel(ctx context.Context, req *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeTickChannel not implemented")
}
func (*UnimplementedDataServiceServer) GetStatisticsChannel(ctx context.Context, req *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatisticsChannel not implemented")
}
func (*UnimplementedDataServiceServer) RegisterNode(ctx context.Context, req *RegisterNodeRequest) (*RegisterNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterNode not implemented")
}
func (*UnimplementedDataServiceServer) Flush(ctx context.Context, req *FlushRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Flush not implemented")
}
func (*UnimplementedDataServiceServer) AssignSegmentID(ctx context.Context, req *AssignSegmentIDRequest) (*AssignSegmentIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignSegmentID not implemented")
}
func (*UnimplementedDataServiceServer) ShowSegments(ctx context.Context, req *ShowSegmentsRequest) (*ShowSegmentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowSegments not implemented")
}
func (*UnimplementedDataServiceServer) GetSegmentInfo(ctx context.Context, req *GetSegmentInfoRequest) (*GetSegmentInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSegmentInfo not implemented")
}
func (*UnimplementedDataServiceServer) GetSegmentStates(ctx context.Context, req *GetSegmentStatesRequest) (*GetSegmentStatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSegmentStates not implemented")
}
func (*UnimplementedDataServiceServer) GetInsertBinlogPaths(ctx context.Context, req *GetInsertBinlogPathsRequest) (*GetInsertBinlogPathsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInsertBinlogPaths not implemented")
}
func (*UnimplementedDataServiceServer) GetInsertChannels(ctx context.Context, req *GetInsertChannelsRequest) (*internalpb.StringList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInsertChannels not implemented")
}
func (*UnimplementedDataServiceServer) GetCollectionStatistics(ctx context.Context, req *GetCollectionStatisticsRequest) (*GetCollectionStatisticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectionStatistics not implemented")
}
func (*UnimplementedDataServiceServer) GetPartitionStatistics(ctx context.Context, req *GetPartitionStatisticsRequest) (*GetPartitionStatisticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPartitionStatistics not implemented")
}
func (*UnimplementedDataServiceServer) GetSegmentInfoChannel(ctx context.Context, req *GetSegmentInfoChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSegmentInfoChannel not implemented")
}
func (*UnimplementedDataServiceServer) SaveBinlogPaths(ctx context.Context, req *SaveBinlogPathsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveBinlogPaths not implemented")
}
func (*UnimplementedDataServiceServer) GetRecoveryInfo(ctx context.Context, req *GetRecoveryInfoRequest) (*GetRecoveryInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecoveryInfo not implemented")
}

func RegisterDataServiceServer(s *grpc.Server, srv DataServiceServer) {
	s.RegisterService(&_DataService_serviceDesc, srv)
}

func _DataService_GetComponentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetComponentStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetComponentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/GetComponentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetComponentStates(ctx, req.(*internalpb.GetComponentStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetTimeTickChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetTimeTickChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetTimeTickChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/GetTimeTickChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetTimeTickChannel(ctx, req.(*internalpb.GetTimeTickChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetStatisticsChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetStatisticsChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetStatisticsChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/GetStatisticsChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetStatisticsChannel(ctx, req.(*internalpb.GetStatisticsChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_RegisterNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).RegisterNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/RegisterNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).RegisterNode(ctx, req.(*RegisterNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_Flush_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlushRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).Flush(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/Flush",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).Flush(ctx, req.(*FlushRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_AssignSegmentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignSegmentIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).AssignSegmentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/AssignSegmentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).AssignSegmentID(ctx, req.(*AssignSegmentIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_ShowSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowSegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).ShowSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/ShowSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).ShowSegments(ctx, req.(*ShowSegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetSegmentInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSegmentInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetSegmentInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/GetSegmentInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetSegmentInfo(ctx, req.(*GetSegmentInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetSegmentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSegmentStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetSegmentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/GetSegmentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetSegmentStates(ctx, req.(*GetSegmentStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetInsertBinlogPaths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInsertBinlogPathsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetInsertBinlogPaths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/GetInsertBinlogPaths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetInsertBinlogPaths(ctx, req.(*GetInsertBinlogPathsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetInsertChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInsertChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetInsertChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/GetInsertChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetInsertChannels(ctx, req.(*GetInsertChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetCollectionStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectionStatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetCollectionStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/GetCollectionStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetCollectionStatistics(ctx, req.(*GetCollectionStatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetPartitionStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPartitionStatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetPartitionStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/GetPartitionStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetPartitionStatistics(ctx, req.(*GetPartitionStatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetSegmentInfoChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSegmentInfoChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetSegmentInfoChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/GetSegmentInfoChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetSegmentInfoChannel(ctx, req.(*GetSegmentInfoChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_SaveBinlogPaths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveBinlogPathsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).SaveBinlogPaths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/SaveBinlogPaths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).SaveBinlogPaths(ctx, req.(*SaveBinlogPathsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_GetRecoveryInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecoveryInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetRecoveryInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataService/GetRecoveryInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetRecoveryInfo(ctx, req.(*GetRecoveryInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milvus.proto.data.DataService",
	HandlerType: (*DataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetComponentStates",
			Handler:    _DataService_GetComponentStates_Handler,
		},
		{
			MethodName: "GetTimeTickChannel",
			Handler:    _DataService_GetTimeTickChannel_Handler,
		},
		{
			MethodName: "GetStatisticsChannel",
			Handler:    _DataService_GetStatisticsChannel_Handler,
		},
		{
			MethodName: "RegisterNode",
			Handler:    _DataService_RegisterNode_Handler,
		},
		{
			MethodName: "Flush",
			Handler:    _DataService_Flush_Handler,
		},
		{
			MethodName: "AssignSegmentID",
			Handler:    _DataService_AssignSegmentID_Handler,
		},
		{
			MethodName: "ShowSegments",
			Handler:    _DataService_ShowSegments_Handler,
		},
		{
			MethodName: "GetSegmentInfo",
			Handler:    _DataService_GetSegmentInfo_Handler,
		},
		{
			MethodName: "GetSegmentStates",
			Handler:    _DataService_GetSegmentStates_Handler,
		},
		{
			MethodName: "GetInsertBinlogPaths",
			Handler:    _DataService_GetInsertBinlogPaths_Handler,
		},
		{
			MethodName: "GetInsertChannels",
			Handler:    _DataService_GetInsertChannels_Handler,
		},
		{
			MethodName: "GetCollectionStatistics",
			Handler:    _DataService_GetCollectionStatistics_Handler,
		},
		{
			MethodName: "GetPartitionStatistics",
			Handler:    _DataService_GetPartitionStatistics_Handler,
		},
		{
			MethodName: "GetSegmentInfoChannel",
			Handler:    _DataService_GetSegmentInfoChannel_Handler,
		},
		{
			MethodName: "SaveBinlogPaths",
			Handler:    _DataService_SaveBinlogPaths_Handler,
		},
		{
			MethodName: "GetRecoveryInfo",
			Handler:    _DataService_GetRecoveryInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "data_service.proto",
}

// DataNodeClient is the client API for DataNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataNodeClient interface {
	GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error)
	GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	WatchDmChannels(ctx context.Context, in *WatchDmChannelsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	FlushSegments(ctx context.Context, in *FlushSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
}

type dataNodeClient struct {
	cc *grpc.ClientConn
}

func NewDataNodeClient(cc *grpc.ClientConn) DataNodeClient {
	return &dataNodeClient{cc}
}

func (c *dataNodeClient) GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error) {
	out := new(internalpb.ComponentStates)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/GetComponentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeClient) GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/GetStatisticsChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeClient) WatchDmChannels(ctx context.Context, in *WatchDmChannelsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/WatchDmChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeClient) FlushSegments(ctx context.Context, in *FlushSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/FlushSegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataNodeServer is the server API for DataNode service.
type DataNodeServer interface {
	GetComponentStates(context.Context, *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error)
	GetStatisticsChannel(context.Context, *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error)
	WatchDmChannels(context.Context, *WatchDmChannelsRequest) (*commonpb.Status, error)
	FlushSegments(context.Context, *FlushSegmentsRequest) (*commonpb.Status, error)
}

// UnimplementedDataNodeServer can be embedded to have forward compatible implementations.
type UnimplementedDataNodeServer struct {
}

func (*UnimplementedDataNodeServer) GetComponentStates(ctx context.Context, req *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComponentStates not implemented")
}
func (*UnimplementedDataNodeServer) GetStatisticsChannel(ctx context.Context, req *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatisticsChannel not implemented")
}
func (*UnimplementedDataNodeServer) WatchDmChannels(ctx context.Context, req *WatchDmChannelsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WatchDmChannels not implemented")
}
func (*UnimplementedDataNodeServer) FlushSegments(ctx context.Context, req *FlushSegmentsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FlushSegments not implemented")
}

func RegisterDataNodeServer(s *grpc.Server, srv DataNodeServer) {
	s.RegisterService(&_DataNode_serviceDesc, srv)
}

func _DataNode_GetComponentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetComponentStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).GetComponentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/GetComponentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).GetComponentStates(ctx, req.(*internalpb.GetComponentStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNode_GetStatisticsChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetStatisticsChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).GetStatisticsChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/GetStatisticsChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).GetStatisticsChannel(ctx, req.(*internalpb.GetStatisticsChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNode_WatchDmChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchDmChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).WatchDmChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/WatchDmChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).WatchDmChannels(ctx, req.(*WatchDmChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNode_FlushSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlushSegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).FlushSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/FlushSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).FlushSegments(ctx, req.(*FlushSegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milvus.proto.data.DataNode",
	HandlerType: (*DataNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetComponentStates",
			Handler:    _DataNode_GetComponentStates_Handler,
		},
		{
			MethodName: "GetStatisticsChannel",
			Handler:    _DataNode_GetStatisticsChannel_Handler,
		},
		{
			MethodName: "WatchDmChannels",
			Handler:    _DataNode_WatchDmChannels_Handler,
		},
		{
			MethodName: "FlushSegments",
			Handler:    _DataNode_FlushSegments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "data_service.proto",
}
